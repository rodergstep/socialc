{"version":3,"sources":["_reset.scss","main.scss","_vars.scss","_mixins.scss"],"names":[],"mappings":"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","file":"../main.min.css","sourcesContent":["a,\nabbr,\nacronym,\naddress,\napplet,\narticle,\naside,\naudio,\nb,\nbig,\nblockquote,\nbody,\ncanvas,\ncaption,\ncenter,\ncite,\ncode,\ndd,\ndel,\ndetails,\ndfn,\ndiv,\ndl,\ndt,\nem,\nembed,\nfieldset,\nfigcaption,\nfigure,\nfooter,\nform,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nheader,\nhgroup,\nhtml,\ni,\niframe,\nimg,\nins,\nkbd,\nlabel,\nlegend,\nli,\nmark,\nmenu,\nnav,\nobject,\nol,\noutput,\np,\npre,\nq,\nruby,\ns,\nsamp,\nsection,\nsmall,\nspan,\nstrike,\nstrong,\nsub,\nsummary,\nsup,\ntable,\ntbody,\ntd,\ntfoot,\nth,\nthead,\ntime,\ntr,\ntt,\nu,\nul,\nvar,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\n\nbody {\n    line-height: 1;\n}\n\nol,\nul {\n    list-style: none;\n}\n\nblockquote,\nq {\n    quotes: none;\n}\n\nblockquote {\n    &:after,\n    &:before {\n        content: '';\n        content: none;\n    }\n}\n\nq {\n    &:after,\n    &:before {\n        content: '';\n        content: none;\n    }\n}\n\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\na {\n    text-decoration: none;\n}\n\na:hover {\n    text-decoration: none;\n}\n","@import \"reset\";\n@import \"vars\";\n@import \"mixins\";\n:root {\n  font-family: $montserrat;\n}\n\n.wrapper {\n  width: 100%;\n  overflow-x: hidden;\n  @include rfs(16); // automatically calculates the correct font-size \n  font-family: $montserrat;\n  color: $boulder;\n  line-height: 1.5;\n}\n\n.container {\n  max-width: 1440px;\n  margin: 0 auto;\n  padding-left: 1%;\n  padding-right: 1%;\n}\n\n// HEADER\n.header {\n  background-color: $header-bg;\n  -webkit-box-shadow: 0px 2px 20px 0px rgba(9, 67, 110, 0.15);\n  -moz-box-shadow: 0px 2px 20px 0px rgba(9, 67, 110, 0.15);\n  box-shadow: 0px 2px 20px 0px rgba(9, 67, 110, 0.15);\n  .header__inner {\n    min-height: 125px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media only screen and (max-width: 768px) {\n      justify-content: space-around;\n    }\n    @media only screen and (max-width: 480px) {\n      padding-top: 20px;\n      flex-direction: column;\n    }\n  }\n  .header__logo-box {\n    position: absolute;\n    left: 135px;\n    top: 18px;\n    max-width: 90px;\n    max-height: 88px;\n    @media only screen and (max-width: 768px) {\n      position: static;\n    }\n  }\n  .header__nav-item {\n    display: inline-block;\n    margin-left: 29px;\n    margin-right: 29px;\n    padding-bottom: 10px;\n    @include rfs(22);\n    color: $tarawera;\n    font-family: $sourceSansPro;\n    font-weight: 600;\n    border-bottom: 3px solid transparent;\n    @media only screen and (max-width: 480px) {\n      margin-top: 40px;\n      margin-bottom: 40px;\n    }\n    &:hover {\n      color: lighten($tarawera, 10%);\n    }\n  }\n  .is-active {\n    border-bottom-color: #ff9827;\n  }\n}\n\n// HERO\n.hero {\n  @media only screen and (min-width: 768px) {\n    min-height: 643px;\n  }\n  background-image: url(\"../img/header-student.png\");\n  background-size: cover;\n  &__inner {\n    padding-top: 200px;\n    text-align: center;\n    color: $white;\n    @media only screen and (max-width: 768px) {\n      padding-top: 150px;\n    }\n  }\n  &__title {\n    @include rfs(44);\n    font-family: $montserrat;\n  }\n  &__subtitle {\n    margin-top: 42px;\n    margin-bottom: 205px;\n    @include rfs(28);\n    font-family: $sourceSansPro;\n    @media only screen and (max-width: 768px) {\n      margin-bottom: 150px;\n    }\n  }\n}\n\n// Common element Store\n.stores-box {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.store {\n  max-height: 60px;\n  max-width: 172px;\n  margin-bottom: 20px;\n  img {\n    width: 100%;\n  }\n}\n\n.store--apple,\n.store--google {\n  margin-right: 17px;\n  margin-left: 17px;\n}\n\n// STEP \n.step {\n  &__inner {\n    padding-top: 70px;\n    padding-bottom: 125px;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    @media only screen and (max-width: 768px) {\n      padding-bottom: 20px;\n    }\n  }\n  &__box {\n    width: 365px;\n    margin-bottom: 50px;\n    text-align: center;\n  }\n  &__icon {\n    display: inline-block;\n    max-width: 180px;\n    max-height: 150px;\n  }\n  &__circle {\n    height: 56px;\n    width: 56px;\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 35px;\n    margin-bottom: 35px;\n    @include rfs(32);\n    color: #fff;\n    border-radius: 50%;\n    background-color: $sunshade;\n  }\n  &__caption {\n    @include rfs(32);\n    font-family: $sourceSansPro;\n    font-weight: 400;\n  }\n}\n\n// MOCKUP\n.mockup {\n  padding-top: 60px;\n  padding-bottom: 60px;\n  background-color: $tarawera;\n  background-image: linear-gradient(-156deg, #1c7296 16%, #0c3e5d 100%);\n  &__inner {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media only screen and (max-width: 768px) {\n      flex-direction: column;\n    }\n  }\n  &__left {\n    text-align: right;\n    @media only screen and (max-width: 768px) {\n      order: 2;\n    }\n  }\n  &__left,\n  &__right {\n    margin-bottom: 40px;\n    @media only screen and (max-width: 768px) {\n      text-align: center;\n    }\n  }\n  &__desc-item {\n    max-width: 260px;\n  }\n  &__desc-item--profile {\n    margin-bottom: 260px;\n    @media only screen and (max-width: 768px) {\n      margin-bottom: 40px;\n    }\n  }\n  &__screenshoot-box {\n    max-width: 335px;\n    max-height: 685px;\n    margin: 0 35px 40px 35px;\n    @media only screen and (max-width: 768px) {\n      max-width: 90%;\n    }\n    img {\n      width: 100%;\n    }\n  }\n  &__desc-title {\n    margin-bottom: 25px;\n    @include rfs(28);\n    font-family: $montserrat;\n    color: $white;\n    @media only screen and (max-width: 768px) {\n      margin-bottom: 10px;\n    }\n  }\n  &__desc-subtitle {\n    @include rfs(18);\n    color: $gallery;\n    font-family: $sourceSansPro;\n  }\n}\n\n// FOOTER\n.footer {\n  text-align: center;\n  &__copyright {\n    padding-top: 30px;\n    padding-bottom: 30px;\n    @include rfs(24);\n    font-family: $sourceSansPro;\n    color: $tarawera;\n  }\n}\n\n// ------------------------\n// 2nd page companies.html\n.wrapper--companies {\n  .hero {\n    background-color: $tarawera;\n    background-image: linear-gradient(-156deg, #1c7296 16%, #0c3e5d 100%);\n  }\n}\n\n@import \"media\";","// FONTS\n$montserrat: 'Montserrat',\nsans-serif;\n$sourceSansPro: 'Source Sans Pro',\nsans-serif;\n// COLORS\n$tarawera: #0c3e5d;\n$sunshade: #ff9827;\n$boulder: #7a7a7a;\n$header-bg: #fcfcfc;\n$white: #fff;\n$gallery: #ececec;","// RFS mixin.\r\n//\r\n// Automated font-resizing.\r\n//\r\n// See https://github.com/MartijnCuppens/rfs.\r\n// Disable RFS by setting $enable-responsive-font-sizes to false.\r\n$enable-responsive-font-sizes: true !default;\r\n@if $enable-responsive-font-sizes==false {\r\n  // If $rfs-factor is set to 1, fluid font-resizing is disabled.\r\n  $rfs-factor: 1;\r\n}\r\n\r\n// Configuration.\r\n// Minimum fontsize.\r\n$rfs-minimum-font-size: 14px !default;\r\n$rfs-minimum-font-size-unit: px !default;\r\n// Breakpoint at where font-size starts decreasing if screen width is smaller.\r\n$rfs-breakpoint: 1200px !default;\r\n$rfs-breakpoint-unit: px !default;\r\n// Factor of decrease.\r\n$rfs-factor: 5 !default;\r\n// 1 rem = $rfs-rem-value px.\r\n$rfs-rem-value: 16 !default;\r\n// Remove px-unit from $rfs-minimum-font-size for calculations.\r\n@if (unit($rfs-minimum-font-size)==\"px\") {\r\n  $rfs-minimum-font-size: $rfs-minimum-font-size / ($rfs-minimum-font-size * 0 + 1);\r\n}\r\n\r\n@else if (unit($rfs-minimum-font-size)==\"rem\") {\r\n  $rfs-minimum-font-size: $rfs-minimum-font-size / ($rfs-minimum-font-size * 0 + (1 / $rfs-rem-value));\r\n}\r\n\r\n// Remove unit from $rfs-breakpoint for calculations.\r\n@if (unit($rfs-breakpoint)==\"px\") {\r\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\r\n}\r\n\r\n@else if (unit($rfs-breakpoint)==\"rem\" or unit($rfs-breakpoint)==\"em\") {\r\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + (1 / $rfs-rem-value));\r\n}\r\n\r\n// Responsive font-size mixin.\r\n@mixin rfs($fs, $important: false) {\r\n  $rfs-suffix: \"\";\r\n  // Add !important suffix if needed.\r\n  @if ($important) {\r\n    $rfs-suffix: \" !important\";\r\n  }\r\n  // If $fs is not a number (like inherit) or $fs has a unit (like 1.5em) or $ is 0, just print the value.\r\n  @if type-of($fs) !=\"number\" or (not unitless($fs) and unit($fs) !=\"px\" and unit($fs) !=\"rem\") or $fs==0 {\r\n    font-size: #{$fs}#{$rfs-suffix};\r\n  }\r\n  @else {\r\n    // Remove px-unit from $fs for calculations.\r\n    @if (unit($fs)==\"px\") {\r\n      $fs: $fs / ($fs * 0 + 1);\r\n    }\r\n    @else if (unit($fs)==\"rem\") {\r\n      $fs: $fs / ($fs * 0 + (1 / $rfs-rem-value));\r\n    }\r\n    // Default font-size.\r\n    @if $rfs-minimum-font-size-unit==rem {\r\n      font-size: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};\r\n    }\r\n    @else if $rfs-minimum-font-size-unit==px {\r\n      font-size: #{$fs}px#{$rfs-suffix};\r\n    }\r\n    @else {\r\n      @error \"`#{$rfs-minimum-font-size-unit}` is not a valid unit for $rfs-minimum-font-size-unit. Use `px` or `rem`.\";\r\n    }\r\n    @if $rfs-factor < 1 {\r\n      @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater or equal to 1.\";\r\n    }\r\n    // Only add media query if font-size is bigger as the minimum font-size.\r\n    // If $rfs-factor == 1, no rescaling will take place.\r\n    @if $fs>$rfs-minimum-font-size and $rfs-factor !=1 {\r\n      // These variables must be defined outside of the if-else-construction.\r\n      // see https://stackoverflow.com/questions/15371332/sass-ignores-variables-defined-in-if-statement.\r\n      $mq-max-width: null;\r\n      $min-width: null;\r\n      // Calculate minimum font-size for given font-size.\r\n      $fs-min: $rfs-minimum-font-size + ($fs - $rfs-minimum-font-size) / $rfs-factor;\r\n      // Calculate difference between given font-size and minimum font-size for given font-size.\r\n      $fs-diff: $fs - $fs-min;\r\n      // RFS breakpoint formatting.\r\n      @if $rfs-breakpoint-unit==em or $rfs-breakpoint-unit==rem {\r\n        $mq-max-width: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};\r\n      }\r\n      @else if $rfs-breakpoint-unit==px {\r\n        $mq-max-width: #{$rfs-breakpoint}px;\r\n      }\r\n      @else {\r\n        @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\r\n      }\r\n      // Minimum font-size formatting.\r\n      // No need to check if the unit is valid, because we did that before.\r\n      @if $rfs-minimum-font-size-unit==rem {\r\n        $min-width: #{$fs-min / $rfs-rem-value}rem;\r\n      }\r\n      @else {\r\n        $min-width: #{$fs-min}px;\r\n      }\r\n      // Calculate the variable width between 0 and $rfs-breakpoint.\r\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}vw;\r\n      // Render the calculated font-size.\r\n      @media (max-width: #{$mq-max-width}) {\r\n        font-size: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\r\n      }\r\n    }\r\n  }\r\n}"]}